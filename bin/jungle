#!/usr/bin/env ruby

# git-jungle
# git-vines

require "colorize"
require "terminal-table"

def transformShaAndGraph(shaAndGraph)
  shaMatch = shaAndGraph.match(/(\w+)$/)
  sha = shaMatch && shaMatch[1]

  sha ? shaAndGraph.sub(sha, sha.colorize(:yellow)) : shaAndGraph
end

def transformTime(time)
  return unless time

  time = time.sub(" ago", "")

  if time.match(/,/)
    time = time.split(",")[0]
  end

  "(#{time})"
end

def transformRefs(refs)
  return "" unless refs

  refs.strip.colorize(color: :red, mode: :bold)
end

def transformAuthor(author)
  return unless author

  if author.match(/ /)
    author = author.split(" ")[0]
  end

  "<#{author}>".colorize(color: :blue, mode: :bold)
end

shaPlaceholder = "%h"
relativeTimePlaceholder = "%ar"
refsPlaceholder = "%d"
subjectPlaceholder = "%s"
authorPlaceholder = "%an"

format = [
  shaPlaceholder,
  relativeTimePlaceholder,
  refsPlaceholder,
  subjectPlaceholder,
  authorPlaceholder,
].join("|split|")

logCommand = "git log --graph --all --color --pretty=\"tformat:#{format}\""
number = ARGV[1]

logCommand = "#{logCommand} -n #{number}" if number

lines = `#{logCommand}`.split("\n")

data = lines.map do |line|
  shaAndGraph, relativeTime, refs, subject, author = line.split("|split|")
  author = transformAuthor(author)

  refsSubjectAuthor = subject ? "#{transformRefs(refs)} #{subject} #{transformAuthor(author)}" : nil

  [transformShaAndGraph(shaAndGraph), transformTime(relativeTime), refsSubjectAuthor]
end

puts Terminal::Table.new(
  rows: data,
  style: {
    border_x: "", border_y: "", border_i: ""
  }
)
